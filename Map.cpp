#include "Map.h"
#include "../inc/ST7735.h"

// 8x8 solid wall tile
const uint16_t WallSprite[64] = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000,
  0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000,
  0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000,
  0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000,
  0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000,
  0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
};

const uint16_t BorderSprite[64] = {
  0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF,
  0x7BEF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7BEF,
  0x7BEF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7BEF,
  0x7BEF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7BEF,
  0x7BEF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7BEF,
  0x7BEF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7BEF,
  0x7BEF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7BEF,
  0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF, 0x7BEF
};



// 8x8 coin sprite
const uint16_t CoinSprite[64] = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0xFD20, 0xFD20, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0xFD20, 0xFD20, 0xFD20, 0xFD20, 0x0000, 0x0000,
  0x0000, 0xFD20, 0xFD20, 0xFFFF, 0xFFFF, 0xFD20, 0xFD20, 0x0000,
  0x0000, 0xFD20, 0xFD20, 0xFFFF, 0xFFFF, 0xFD20, 0xFD20, 0x0000,
  0x0000, 0x0000, 0xFD20, 0xFD20, 0xFD20, 0xFD20, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0xFD20, 0xFD20, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
};

const uint16_t SpeedSprite[64] = {
  0x0000, 0x07E0, 0x0000, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x07E0, 0x07E0, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000,
  0x07E0, 0x07E0, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000,
  0x0000, 0x07E0, 0x07E0, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000,
  0x0000, 0x07E0, 0x07E0, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000,
  0x07E0, 0x07E0, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000,
  0x0000, 0x07E0, 0x07E0, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000,
  0x0000, 0x07E0, 0x0000, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000
};



// Map definition (0 = floor, 1 = wall, 2 = coin)
uint8_t map[GRID_HEIGHT][GRID_WIDTH] = {
  {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
  {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
  {2,1,0,1,1,1,1,0,1,1,1,1,0,1,0,2},
  {2,1,0,1,4,0,0,1,0,0,0,1,0,0,0,2},
  {2,1,0,1,0,1,0,1,1,1,0,1,1,1,0,2},
  {2,1,0,0,0,1,0,0,0,1,0,0,0,1,0,2},
  {2,1,1,1,0,1,1,1,0,1,1,1,0,1,1,2},
  {2,1,0,0,4,0,0,1,0,0,0,1,0,0,0,2},
  {2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,2},
  {2,1,0,0,0,1,0,0,0,1,0,0,3,1,0,2},
  {2,1,1,1,0,1,1,1,0,1,1,1,0,1,1,2},
  {2,1,0,0,0,0,0,1,0,0,0,1,0,0,0,2},
  {2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,2},
  {2,1,0,0,0,1,4,0,3,1,0,0,0,1,0,2},
  {2,1,1,1,0,1,1,1,0,1,1,1,0,1,1,2},
  {2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
  {2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,2},
  {2,1,0,0,0,0,0,0,0,3,0,0,0,0,0,2},
  {2,0,0,0,0,0,1,1,1,1,0,0,0,0,3,2},
  {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2}
};

// theres an extra layer that doesnt show up down here




void DrawMap(void) {
  for (int row = 0; row < GRID_HEIGHT; row++) {
    for (int col = 0; col < GRID_WIDTH; col++) {
      int x = col * TILE_SIZE;
      int y = row * TILE_SIZE;
      switch (map[row][col]) {
        case 1:
          ST7735_DrawBitmap(x, y, WallSprite, TILE_SIZE, TILE_SIZE);
          break;
        case 2:
          ST7735_DrawBitmap(x, y, BorderSprite, TILE_SIZE, TILE_SIZE);
          break;
        case 3:
          ST7735_DrawBitmap(x, y, CoinSprite, TILE_SIZE, TILE_SIZE);
          break;
        case 4:
          ST7735_DrawBitmap(x, y, SpeedSprite, TILE_SIZE, TILE_SIZE);
          break;
        // case 0: skip drawing
      }
    }
  }
}

